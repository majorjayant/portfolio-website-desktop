#!/usr/bin/env python
"""
Build script for generating static site files.
This script:
1. Ensures required directories exist
2. Copies necessary files to static directory
3. Generates index.html if it doesn't exist
"""

import os
import sys
import shutil
from pathlib import Path
import json
import time

def create_directory(path):
    """Create directory if it doesn't exist"""
    try:
        os.makedirs(path, exist_ok=True)
        print(f"✓ Directory created or already exists: {path}")
        return True
    except Exception as e:
        print(f"✗ Failed to create directory {path}: {str(e)}")
        return False

def copy_static_assets():
    """Copy static assets to the output directory"""
    try:
        # Define source and destination paths
        src_path = Path("app/static")
        
        # Create destination directory if it doesn't exist
        if not create_directory(src_path):
            return False
        
        print(f"✓ Static directory check completed")
        return True
    except Exception as e:
        print(f"✗ Failed to copy static assets: {str(e)}")
        return False

def generate_site_config():
    """Generate site_config.json if it doesn't exist"""
    try:
        config_dir = Path("app/static/data")
        config_file = config_dir / "site_config.json"
        
        # Create the data directory if it doesn't exist
        create_directory(config_dir)
        
        # Check if site_config.json already exists
        if config_file.exists():
            print(f"✓ site_config.json already exists at {config_file}")
            return True
        
        # If not, create a basic site_config.json
        basic_config = {
            "site_configs": {
                "site_title": "Jayant Malik | Portfolio",
                "site_subtitle": "Product Manager | Developer",
                "site_description": "Welcome to my portfolio website. I'm a passionate product manager based in New Delhi, India. Since 2015, I've enjoyed turning complex problems into simple, beautiful and intuitive designs.",
                "image_urls": {
                    "favicon": os.environ.get("IMAGE_FAVICON_URL", "/img/favicon.ico"),
                    "logo": os.environ.get("IMAGE_LOGO_URL", "/img/logo.png"),
                    "banner": os.environ.get("IMAGE_BANNER_URL", "/img/banner.jpg"),
                    "mobile_banner": os.environ.get("IMAGE_MOBILE_BANNER_URL", "/img/banner-mobile.jpg"),
                    "about_profile": os.environ.get("IMAGE_ABOUT_PROFILE_URL", "/img/profile.jpg"),
                },
                "exported_at": time.strftime("%Y-%m-%dT%H:%M:%S.%f"),
                "export_source": "build_script"
            }
        }
        
        # Write the configuration to file
        with open(config_file, "w", encoding="utf-8") as f:
            json.dump(basic_config, f, indent=2)
        
        print(f"✓ Generated site_config.json at {config_file}")
        return True
    except Exception as e:
        print(f"✗ Failed to generate site_config.json: {str(e)}")
        return False

def ensure_index_html():
    """Ensure index.html exists in the static directory"""
    try:
        index_path = Path("app/static/index.html")
        
        # Check if index.html already exists
        if index_path.exists():
            print(f"✓ index.html already exists at {index_path}")
            return True
        
        # If not, run the standalone index generator
        print("Index.html doesn't exist, running standalone generator...")
        try:
            # Import the standalone index generator
            sys.path.append(str(Path("app")))
            from index_standalone import generate_index_html
            
            # Generate index.html
            generate_index_html()
            
            # Verify that index.html was created
            if index_path.exists():
                print(f"✓ index.html was generated successfully using standalone generator")
                return True
            else:
                print(f"✗ index.html was not generated by standalone generator")
                return False
        except ImportError:
            print("✗ Could not import index_standalone.py")
            
            # Create a simple index.html as a last resort
            simple_html = """<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jayant Malik | Portfolio</title>
    <link rel="icon" href="/img/favicon.ico">
</head>
<body>
    <h1>Welcome to My Portfolio</h1>
    <p>This is a fallback page. Please check the build logs for errors.</p>
</body>
</html>"""
            
            # Write the simple HTML to index.html
            with open(index_path, "w", encoding="utf-8") as f:
                f.write(simple_html)
            
            print(f"✓ Created fallback index.html at {index_path}")
            return True
    except Exception as e:
        print(f"✗ Failed to ensure index.html exists: {str(e)}")
        return False

def main():
    """Main build function"""
    print("Starting static site build process...")
    
    # Perform build steps
    steps = [
        ("Copying static assets", copy_static_assets),
        ("Generating site configuration", generate_site_config),
        ("Ensuring index.html exists", ensure_index_html)
    ]
    
    # Execute each step and track failures
    failures = 0
    for step_name, step_func in steps:
        print(f"\n=== {step_name} ===")
        if not step_func():
            failures += 1
    
    # Print summary
    print("\n=== Build Summary ===")
    if failures > 0:
        print(f"❌ Build completed with {failures} failures")
        sys.exit(1)
    else:
        print("✅ Build completed successfully")
        sys.exit(0)

if __name__ == "__main__":
    main() 