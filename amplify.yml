version: 1
frontend:
  phases:
    preBuild:
      commands:
        - "echo \"Setting up Python environment...\""
        - "python --version"
        - "python -c \"import sys; print('Python executable:', sys.executable)\""
        - "echo \"Installing pip and dependencies...\""
        - "python -m pip install --upgrade pip"
        - "if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; else echo \"No requirements-dev.txt found, installing core dependencies.\"; python -m pip install Flask==2.3.3 Jinja2==3.1.2 python-dotenv==1.0.0 boto3 botocore; fi"
        - "echo \"Running build requirements check...\""
        - "if [ -f check-build-requirements.py ]; then python check-build-requirements.py || echo \"Requirements check failed but continuing build.\"; else echo \"No check-build-requirements.py found, skipping check.\"; fi"
    build:
      commands:
        - "echo \"Environment info and checking files...\""
        - "pwd"
        - "ls -la"
        - "echo \"Setting up directories...\""
        - "mkdir -p app/static/admin"
        - "mkdir -p app/static/data"
        - "mkdir -p app/static/api"
        - "mkdir -p app/static/admin-direct"
        - "echo \"Setting AWS credentials for build...\""
        - "export AWS_REGION=eu-north-1"
        - "export STATIC_DEPLOYMENT=true"
        - "echo \"Copying admin files...\""
        - "if [ -d app/admin ]; then cp -f app/admin/dashboard.html app/static/admin/dashboard.html || echo \"dashboard.html not found\"; else echo \"No admin directory found.\"; fi"
        - "if [ -d app/admin ]; then cp -f app/admin/index.html app/static/admin/index.html || echo \"admin index.html not found\"; else echo \"No admin directory found.\"; fi"
        - "if [ -d app/admin-direct ]; then cp -f app/admin-direct/index.html app/static/admin-direct/index.html || echo \"admin-direct/index.html not found\"; else echo \"No admin-direct directory found.\"; fi"
        - "if [ ! -f app/static/data/site_config.json ]; then echo '{\"site_configs\":{}}' > app/static/data/site_config.json; fi"
        - "echo \"Building static site...\""
        - "if [ -f build_static_site.py ]; then python build_static_site.py || echo \"Main build script failed, using fallback\"; else echo \"No build script found, using fallback\"; python app/index_standalone.py || echo \"Standalone index generator failed. Creating minimal index.html\"; echo '<html><head><title>Portfolio</title></head><body><h1>Portfolio Website</h1><p>This is a fallback page.</p></body></html>' > app/static/index.html; fi"
        - "echo \"Checking build output:\""
        - "ls -la app/static/ || echo \"Static directory does not exist\""
        - "echo \"Verifying index.html exists:\""
        - "if [ ! -f app/static/index.html ]; then echo \"WARNING: index.html not found! Creating minimal index\"; echo '<html><head><title>Portfolio</title></head><body><h1>Portfolio Website</h1><p>This is a fallback page.</p></body></html>' > app/static/index.html; fi"
        - "if [ -f amplify-debug.sh ]; then chmod +x amplify-debug.sh && ./amplify-debug.sh; else echo \"No debug script found, skipping.\"; fi"
  artifacts:
    baseDirectory: app/static
    files:
      - '**/*'
  cache:
    paths:
      - .pip-cache/**/*
      - node_modules/**/*
  customHeaders:
    # Set efficient caching for static assets
    - pattern: '**/*.{js,css,png,jpg,jpeg,gif,svg,woff,woff2,ttf,eot}'
      headers:
        - key: 'Cache-Control'
          value: 'public, max-age=31536000, immutable'
    
    # No caching for HTML files that might change
    - pattern: '**/*.html'
      headers:
        - key: 'Cache-Control'
          value: 'public, max-age=0, must-revalidate'
    
    # Configure proper content types and CORS for API
    - pattern: '*.json'
      headers:
        - key: 'Content-Type'
          value: 'application/json'
        - key: 'Access-Control-Allow-Origin'
          value: '*'
    
    - pattern: '*.js'
      headers:
        - key: 'Content-Type'
          value: 'application/javascript'
    
    # Admin section always latest version
    - pattern: 'admin/*'
      headers:
        - key: 'Cache-Control'
          value: 'no-cache, no-store, must-revalidate'
  
  # URL rewriting rules
  rewrites:
    # Admin Routes
    - source: '/admin'
      target: '/admin/index.html'
      status: '200'
    - source: '/admin/'
      target: '/admin/index.html'
      status: '200'
    - source: '/admin/dashboard'
      target: '/admin/dashboard.html'
      status: '200'
    - source: '/admin/dashboard/'
      target: '/admin/dashboard.html'
      status: '200'
    - source: '/admin-direct'
      target: '/admin-direct/index.html'
      status: '200'
    - source: '/admin-direct/'
      target: '/admin-direct/index.html'
      status: '200'
    
    # Catch-all route for SPA
    - source: '/<*>'
      target: '/index.html'
      status: '200'
